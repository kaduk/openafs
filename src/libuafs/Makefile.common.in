# Copyright 2000, International Business Machines Corporation and others.
# All Rights Reserved.
# 
# This software has been released under the terms of the IBM Public
# License.  For details, see the LICENSE file in the top-level source
# directory or online at http://www.openafs.org/dl/license10.html

# Common elements for Makefiles for all system types.
#

# Each MakefileProto includes Makefile.config, but we need to override
# a few things to persuade libtool to use the same build flags that were
# historically used.
CCOBJ=$(CC)
MT_CC=$(CC)
MT_CFLAGS=
COMMON_CFLAGS=$(COMMON_INCLUDE) $(CPPFLAGS_roken) $(OPTF) -DKERNEL $(CFLAGS)

LT_objs = \
	afs_atomlist.lo \
	afs_lhash.lo \
	afs_analyze.lo \
	afs_error.lo \
	afs_axscache.lo  \
	afs_buffer.lo	\
	afs_bypasscache.lo \
	afs_callback.lo	\
	afs_cbqueue.lo    \
	afs_cell.lo \
	afs_chunk.lo		\
	afs_conn.lo \
	afs_daemons.lo	\
	afs_dcache.lo \
	afs_dir.lo		\
	afs_disconnected.lo	\
	afs_dynroot.lo \
	afs_icl.lo \
	afs_init.lo \
	afs_lock.lo	\
	afs_mariner.lo \
	afs_memcache.lo	\
	afs_fetchstore.lo	\
	afs_osidnlc.lo	\
	afs_osi_pag.lo \
	afs_segments.lo \
	afs_server.lo \
	afs_stat.lo \
	afs_syscall.lo \
	afs_tokens.lo \
	afs_user.lo \
	afs_util.lo \
	afs_vcache.lo \
	afs_warn.lo \
	afs_osi_uio.lo \
	afs_vnop_access.lo \
	afs_vnop_attrs.lo \
	afs_vnop_create.lo \
	afs_vnop_dirops.lo \
	afs_vnop_fid.lo \
	afs_vnop_flock.lo \
	afs_vnop_link.lo \
	afs_vnop_lookup.lo \
	afs_vnop_open.lo \
	afs_vnop_read.lo \
	afs_vnop_readdir.lo \
	afs_vnop_remove.lo \
	afs_vnop_rename.lo \
	afs_vnop_strategy.lo \
	afs_vnop_symlink.lo \
	afs_vnop_write.lo \
	afs_volume.lo \
	afs_call.lo \
	afs_pioctl.lo \
	osi_vfsops.lo \
	afs_usrops.lo \
	afsd.lo \
	afsd_uafs.lo \
	xdr.lo \
	xdr_afsuuid.lo \
	xdr_update.lo \
	xdr_refernce.lo \
	afs_uuid.lo \
	assert.lo \
	osi_vnodeops.lo \
	osi_vm.lo \
	osi_groups.lo \
	osi_gcpags.lo \
	osi_vcache.lo \
	afsaux.lo \
	Kvice.xdr.lo \
	xdr_array.lo \
	xdr_arrayn.lo \
	Kvice.cs.lo \
	fcrypt.lo \
	rx.lo \
	rx_rdwr.lo \
	rx_clock.lo \
	rx_event.lo \
	rx_globals.lo \
	rx_identity.lo \
	rx_kmutex.lo \
	rx_knet.lo \
	rx_kcommon.lo \
	rx_misc.lo \
	rx_multi.lo \
	rx_null.lo \
	rx_opaque.lo \
	rx_getaddr.lo \
	rx_stats.lo \
	rx_packet.lo \
	rx_conncache.lo \
	rx_call.lo \
	rx_conn.lo \
	rx_peer.lo \
	xdr_rx.lo \
	Kvldbint.cs.lo \
	Kvldbint.xdr.lo \
	Kcallback.ss.lo \
	crypt_conn.lo \
	AFS_component_version_number.lo \
	afs_exporter.lo \
	rxkad_client.lo \
	rxkad_common.lo \
	casestrcpy.lo \
	dirpath.lo \
	fileutil.lo \
	netrestrict.lo \
	cellconfig.lo \
	keys.lo \
	realms.lo \
	ktc.lo \
	Krxstat.ss.lo \
	Krxstat.xdr.lo \
	rxstat.lo \
	xdr_int32.lo \
	xdr_int64.lo \
	token.xdr.lo \
	token.lo \
	xdr_mem.lo \
	xdr_len.lo

SHELL=/bin/sh
INCLUDE=  -I. -I${ISYSROOT}/usr/include -I${TOP_OBJDIR}/src/config
PERLUAFS = PERLUAFS
AFS	=../afs
RX	=../rx
AFSINT=../afsint
LIB	=../lib
SWIG_PERL_CFLAGS = -fPIC `perl -MExtUtils::Embed -e ccopts`
SWIG_PERL_LDFLAGS = -fPIC `perl -MExtUtils::Embed -e ldopts`
SWIG = @SWIG@
LIBUAFS_BUILD_PERL = @LIBUAFS_BUILD_PERL@

TOP_OBJ_AUTH = ${TOP_OBJDIR}/src/auth
TOP_OBJ_FSINT = ${TOP_OBJDIR}/src/fsint
TOP_OBJ_RXSTAT = ${TOP_OBJDIR}/src/rxstat
TOP_OBJ_VLSERVER = ${TOP_OBJDIR}/src/vlserver

TOP_SRC_AFS = ${TOP_SRCDIR}/afs
TOP_SRC_AUTH = ${TOP_SRCDIR}/auth
TOP_SRC_RXSTAT = ${TOP_SRCDIR}/rxstat
TOP_SRC_FSINT = ${TOP_SRCDIR}/fsint
TOP_SRC_RX = ${TOP_SRCDIR}/rx
TOP_SRC_VNOPS = ${TOP_SRCDIR}/afs/VNOPS
TOP_SRC_RXKAD = ${TOP_SRCDIR}/rxkad

COMMON_INCLUDE = -I. -I.. -I../nfs \
        -I${TOP_SRCDIR} \
        -I${TOP_SRCDIR}/afs \
        -I${TOP_SRCDIR}/afs/UKERNEL \
        -I${TOP_SRCDIR}/config \
        -I${TOP_SRCDIR}/rx \
        -I${TOP_SRCDIR}/rx/UKERNEL \
        -I${TOP_SRCDIR}/rxkad \
        -I${TOP_SRCDIR}/util \
        -I${TOP_OBJDIR}/src \
	-I${TOP_OBJDIR}/src/afs \
        -I${TOP_OBJDIR}/src/afs/UKERNEL \
        -I${TOP_OBJDIR}/src/rxkad \
        -I${TOP_OBJDIR}/src/config \
        -I${TOP_OBJDIR}/src/fsint \
        -I${TOP_OBJDIR}/src/vlserver \
	-I${TOP_OBJDIR}/src/libuafs \
	-I${TOP_OBJDIR}/src/auth \
	-I${TOP_INCDIR}/afs \
        -I${TOP_INCDIR} \
        @INCLUDE_libintl@

# Build rules - CC and CFLAGS are defined in system specific MakefileProtos.

all: ${TOP_LIBDIR}/libjuafs.a ${TOP_LIBDIR}/libuafs.a \
	${TOP_LIBDIR}/libuafs_pic.a linktest @LIBUAFS_BUILD_PERL@

${TOP_LIBDIR}/libuafs.a: libuafs.a
	${INSTALL_DATA} libuafs.a $@

${TOP_LIBDIR}/libuafs_pic.a: libuafs_pic.la
	${INSTALL_DATA} .libs/libuafs_pic.a $@

${TOP_LIBDIR}/libjuafs.a: libuafs.a
	${INSTALL_DATA} libuafs.a $@

libuafs.a: setup_common $(LT_objs)
	$(LT_LDLIB_lwp) $(LT_objs)

libuafs_pic.la: libuafs.a $(LT_objs)
	$(LT_LDLIB_pic) $(LT_objs)

setup_perllib:
	${INSTALL} -d ${TOP_LIBDIR}/perl
	${INSTALL} -d ${TOP_LIBDIR}/perl/AFS

${TOP_LIBDIR}/perl/ukernel.so: setup_perllib PERLUAFS/ukernel.so
	${INSTALL_DATA} PERLUAFS/ukernel.so $@

${TOP_LIBDIR}/perl/AFS/ukernel.pm: setup_perllib PERLUAFS/ukernel.pm
	${INSTALL_DATA} PERLUAFS/ukernel.pm $@

LIBUAFS_BUILD_PERL: ${TOP_LIBDIR}/perl/ukernel.so ${TOP_LIBDIR}/perl/AFS/ukernel.pm

linktest: libuafs.a
	$(CC) $(TEST_CFLAGS) $(TEST_LDFLAGS) \
		$(LDFLAGS_roken) $(LDFLAGS_hcrypto) -o linktest \
		${srcdir}/linktest.c $(COMMON_INCLUDE) -DUKERNEL \
		libuafs.a ${TOP_LIBDIR}/libcmd.a \
		${TOP_LIBDIR}/libafsutil.a $(TOP_LIBDIR)/libopr.a \
		$(LIB_hcrypto) $(LIB_roken) $(LIB_crypt) $(TEST_LIBS) $(XLIBS)

# Compilation rules

# These files are for the user space library
afs_atomlist.lo: $(TOP_SRCDIR)/util/afs_atomlist.c
	$(LTLWP_CCRULE) $<
afs_lhash.lo: $(TOP_SRCDIR)/util/afs_lhash.c
	$(LTLWP_CCRULE) $<
afs_analyze.lo: $(TOP_SRC_AFS)/afs_analyze.c
	$(LTLWP_CCRULE) $<
afs_axscache.lo: $(TOP_SRC_AFS)/afs_axscache.c
	$(LTLWP_CCRULE) $<
afs_buffer.lo: $(TOP_SRC_AFS)/afs_buffer.c
	$(LTLWP_CCRULE) $<
afs_bypasscache.lo: $(TOP_SRC_AFS)/afs_bypasscache.c
	$(LTLWP_CCRULE) $<
afs_cell.lo: $(TOP_SRC_AFS)/afs_cell.c
	$(LTLWP_CCRULE) $<
afs_conn.lo: $(TOP_SRC_AFS)/afs_conn.c
	$(LTLWP_CCRULE) $<
afs_dcache.lo: $(TOP_SRC_AFS)/afs_dcache.c
	$(LTLWP_CCRULE) $<
afs_dynroot.lo: $(TOP_SRC_AFS)/afs_dynroot.c
	$(LTLWP_CCRULE) $<
afs_disconnected.lo: $(TOP_SRC_AFS)/afs_disconnected.c
	$(LTLWP_CCRULE) $<
afs_error.lo: $(TOP_SRC_AFS)/afs_error.c
	$(LTLWP_CCRULE) $<
afs_init.lo: $(TOP_SRC_AFS)/afs_init.c
	$(LTLWP_CCRULE) $<
afs_mariner.lo: $(TOP_SRC_AFS)/afs_mariner.c
	$(LTLWP_CCRULE) $<
afs_osidnlc.lo: $(TOP_SRC_AFS)/afs_osidnlc.c
	$(LTLWP_CCRULE) $<
afs_osi.lo: $(TOP_SRC_AFS)/afs_osi.c
	$(LTLWP_CCRULE) $<
afs_osi_pag.lo: $(TOP_SRC_AFS)/afs_osi_pag.c
	$(LTLWP_CCRULE) $<
afs_segments.lo: $(TOP_SRC_AFS)/afs_segments.c
	$(LTLWP_CCRULE) $<
afs_server.lo: $(TOP_SRC_AFS)/afs_server.c
	$(LTLWP_CCRULE) $<
afs_tokens.lo: $(TOP_SRC_AFS)/afs_tokens.c
	$(LTLWP_CCRULE) $<
afs_user.lo: $(TOP_SRC_AFS)/afs_user.c
	$(LTLWP_CCRULE) $<
afs_util.lo: $(TOP_SRC_AFS)/afs_util.c
	$(LTLWP_CCRULE) $<
afs_vcache.lo: $(TOP_SRC_AFS)/afs_vcache.c
	$(LTLWP_CCRULE) $<
afs_warn.lo: $(TOP_SRC_AFS)/afs_warn.c
	$(LTLWP_CCRULE) $<
afs_osi_uio.lo: $(TOP_SRC_AFS)/afs_osi_uio.c
	$(LTLWP_CCRULE) $<
afs_vnop_access.lo: $(TOP_SRC_VNOPS)/afs_vnop_access.c
	$(LTLWP_CCRULE) $<
afs_vnop_attrs.lo: $(TOP_SRC_VNOPS)/afs_vnop_attrs.c
	$(LTLWP_CCRULE) $<
afs_vnop_create.lo: $(TOP_SRC_VNOPS)/afs_vnop_create.c
	$(LTLWP_CCRULE) $<
afs_vnop_dirops.lo: $(TOP_SRC_VNOPS)/afs_vnop_dirops.c
	$(LTLWP_CCRULE) $<
afs_vnop_fid.lo: $(TOP_SRC_VNOPS)/afs_vnop_fid.c
	$(LTLWP_CCRULE) $<
afs_vnop_flock.lo: $(TOP_SRC_VNOPS)/afs_vnop_flock.c
	$(LTLWP_CCRULE) $<
afs_vnop_link.lo: $(TOP_SRC_VNOPS)/afs_vnop_link.c
	$(LTLWP_CCRULE) $<
afs_vnop_lookup.lo: $(TOP_SRC_VNOPS)/afs_vnop_lookup.c
	$(LTLWP_CCRULE) $<
afs_vnop_open.lo: $(TOP_SRC_VNOPS)/afs_vnop_open.c
	$(LTLWP_CCRULE) $<
afs_vnop_read.lo: $(TOP_SRC_VNOPS)/afs_vnop_read.c
	$(LTLWP_CCRULE) $<
afs_vnop_readdir.lo: $(TOP_SRC_VNOPS)/afs_vnop_readdir.c
	$(LTLWP_CCRULE) $<
afs_vnop_remove.lo: $(TOP_SRC_VNOPS)/afs_vnop_remove.c
	$(LTLWP_CCRULE) $<
afs_vnop_rename.lo: $(TOP_SRC_VNOPS)/afs_vnop_rename.c
	$(LTLWP_CCRULE) $<
afs_vnop_strategy.lo: $(TOP_SRC_VNOPS)/afs_vnop_strategy.c
	$(LTLWP_CCRULE) $<
afs_vnop_symlink.lo: $(TOP_SRC_VNOPS)/afs_vnop_symlink.c
	$(LTLWP_CCRULE) $<
afs_vnop_write.lo: $(TOP_SRC_VNOPS)/afs_vnop_write.c
	$(LTLWP_CCRULE) $<
afs_volume.lo: $(TOP_SRC_AFS)/afs_volume.c
	$(LTLWP_CCRULE) $<
rx_rdwr.lo: $(TOP_SRC_RX)/rx_rdwr.c
	$(LTLWP_CCRULE) $<
afs_cbqueue.lo: $(TOP_SRC_AFS)/afs_cbqueue.c
	$(LTLWP_CCRULE) $<
afs_callback.lo: $(TOP_SRC_AFS)/afs_callback.c
	$(LTLWP_CCRULE) $<
afs_chunk.lo: $(TOP_SRC_AFS)/afs_chunk.c
	$(LTLWP_CCRULE) $<
afs_daemons.lo: $(TOP_SRC_AFS)/afs_daemons.c
	$(LTLWP_CCRULE) $<
afs_dir.lo: 	$(TOP_SRCDIR)/dir/dir.c
	$(LTLWP_CCRULE) $<
AFS_component_version_number.lo: AFS_component_version_number.c
	$(LTLWP_CCRULE) $<
afs_lock.lo: $(TOP_SRC_AFS)/afs_lock.c
	$(LTLWP_CCRULE) $<
afs_memcache.lo: $(TOP_SRC_AFS)/afs_memcache.c
	$(LTLWP_CCRULE) $<
afs_fetchstore.lo: $(TOP_SRC_AFS)/afs_fetchstore.c
	$(LTLWP_CCRULE) $<
afs_stat.lo: $(TOP_SRC_AFS)/afs_stat.c
	$(LTLWP_CCRULE) $<
fcrypt.lo: 	$(TOP_SRC_RXKAD)/fcrypt.c
	$(LTLWP_CCRULE) $<
crypt_conn.lo: $(TOP_SRC_RXKAD)/crypt_conn.c
	$(LTLWP_CCRULE) $<
rxkad_client.lo: $(TOP_SRC_RXKAD)/rxkad_client.c
	$(LTLWP_CCRULE) $<
rxkad_common.lo: $(TOP_SRC_RXKAD)/rxkad_common.c
	$(LTLWP_CCRULE) $<
afs_exporter.lo: $(TOP_SRCDIR)/afs/afs_exporter.c
	$(LTLWP_CCRULE) $<
afs_nfsclnt.lo: $(TOP_SRC_AFS)/afs_nfsclnt.c
	$(LTLWP_CCRULE) $<
afs_nfsdisp.lo: $(TOP_SRC_AFS)/afs_nfsdisp.c
	$(LTLWP_CCRULE) $<
rx.lo: $(TOP_SRC_RX)/rx.c
	$(LTLWP_CCRULE) $<
rx_clock.lo: $(TOP_SRC_RX)/rx_clock.c
	$(LTLWP_CCRULE) $<
rx_event.lo: $(TOP_SRC_RX)/rx_event.c
	$(LTLWP_CCRULE) $<
rx_globals.lo: $(TOP_SRC_RX)/rx_globals.c
	$(LTLWP_CCRULE) $<
rx_identity.lo: $(TOP_SRC_RX)/rx_identity.c
	$(LTLWP_CCRULE) $<
rx_misc.lo: $(TOP_SRC_RX)/rx_misc.c
	$(LTLWP_CCRULE) $<
rx_multi.lo: $(TOP_SRC_RX)/rx_multi.c
	$(LTLWP_CCRULE) $<
rx_null.lo: $(TOP_SRC_RX)/rx_null.c
	$(LTLWP_CCRULE) $<
rx_opaque.lo: $(TOP_SRC_RX)/rx_opaque.c
	$(LTLWP_CCRULE) $<
rx_getaddr.lo: $(TOP_SRC_RX)/rx_getaddr.c
	$(LTLWP_CCRULE) $<
rx_stats.lo: $(TOP_SRC_RX)/rx_stats.c
	$(LTLWP_CCRULE) $<
rx_packet.lo: $(TOP_SRC_RX)/rx_packet.c
	$(LTLWP_CCRULE) $<
rx_conncache.lo: $(TOP_SRCDIR)/rx/rx_conncache.c
	$(LTLWP_CCRULE) $<
rx_call.lo: $(TOP_SRCDIR)/rx/rx_call.c
	$(LTLWP_CCRULE) $<
rx_conn.lo: $(TOP_SRCDIR)/rx/rx_conn.c
	$(LTLWP_CCRULE) $<
rx_peer.lo: $(TOP_SRCDIR)/rx/rx_peer.c
	$(LTLWP_CCRULE) $<
xdr_rx.lo: $(TOP_SRC_RX)/xdr_rx.c
	$(LTLWP_CCRULE) $<
xdr_int32.lo: $(TOP_SRC_RX)/xdr_int32.c
	$(LTLWP_CCRULE) $<
xdr_int64.lo: $(TOP_SRC_RX)/xdr_int64.c
	$(LTLWP_CCRULE) $<
afs_usrops.lo: $(TOP_SRC_AFS)/UKERNEL/afs_usrops.c
	$(LTLWP_CCRULE) $<
afsd.lo: $(TOP_SRCDIR)/afsd/afsd.c
	$(LTLWP_CCRULE) $< @CFLAGS_NOERROR@
afsd_uafs.lo: $(TOP_SRC_AFS)/UKERNEL/afsd_uafs.c
	$(LTLWP_CCRULE) $<
afs_uuid.lo: $(TOP_SRCDIR)/util/uuid.c
	$(LTLWP_CCRULE) $<
assert.lo: $(TOP_SRCDIR)/opr/assert.c
	$(LTLWP_CCRULE) $<
xdr_afsuuid.lo: $(TOP_SRCDIR)/rx/xdr_afsuuid.c
	$(LTLWP_CCRULE) $<
xdr_update.lo: $(TOP_SRCDIR)/rx/xdr_update.c
	$(LTLWP_CCRULE) $<
xdr_refernce.lo: $(TOP_SRCDIR)/rx/xdr_refernce.c
	$(LTLWP_CCRULE) $<
xdr.lo: $(TOP_SRCDIR)/rx/xdr.c
	$(LTLWP_CCRULE) $<
osi_vnodeops.lo: $(TOP_SRC_AFS)/UKERNEL/osi_vnodeops.c
	$(LTLWP_CCRULE) $<
osi_vm.lo: $(TOP_SRC_AFS)/UKERNEL/osi_vm.c
	$(LTLWP_CCRULE) $<
osi_groups.lo: $(TOP_SRC_AFS)/UKERNEL/osi_groups.c
	$(LTLWP_CCRULE) $<
osi_gcpags.lo: $(TOP_SRC_AFS)/UKERNEL/osi_gcpags.c
	$(LTLWP_CCRULE) $<
osi_vcache.lo: $(TOP_SRC_AFS)/UKERNEL/osi_vcache.c
	$(LTLWP_CCRULE) $<
Kcallback.ss.lo: $(TOP_OBJ_FSINT)/Kcallback.ss.c
	$(LTLWP_CCRULE) $<
Kvice.xdr.lo: $(TOP_OBJ_FSINT)/Kvice.xdr.c
	$(LTLWP_CCRULE) $<
Kvice.cs.lo: $(TOP_OBJ_FSINT)/Kvice.cs.c
	$(LTLWP_CCRULE) $<
afsaux.lo: $(TOP_SRC_FSINT)/afsaux.c
	$(LTLWP_CCRULE) $<
xdr_arrayn.lo: $(TOP_SRC_RX)/xdr_arrayn.c
	$(LTLWP_CCRULE) $<
xdr_array.lo: $(TOP_SRC_RX)/xdr_array.c
	$(LTLWP_CCRULE) $<
Kvldbint.cs.lo: $(TOP_OBJ_VLSERVER)/Kvldbint.cs.c
	$(LTLWP_CCRULE) $<
Kvldbint.xdr.lo: $(TOP_OBJ_VLSERVER)/Kvldbint.xdr.c
	$(LTLWP_CCRULE) $<
rx_kmutex.lo: $(TOP_SRC_RX)/UKERNEL/rx_kmutex.c
	$(LTLWP_CCRULE) $<
rx_knet.lo: $(TOP_SRC_RX)/UKERNEL/rx_knet.c
	$(LTLWP_CCRULE) $<
rx_kcommon.lo: $(TOP_SRCDIR)/rx/rx_kcommon.c
	$(LTLWP_CCRULE) $<
afs_call.lo: $(TOP_SRC_AFS)/afs_call.c
	$(LTLWP_CCRULE) $< -DAFS_NONFSTRANS
afs_icl.lo: $(TOP_SRC_AFS)/afs_icl.c
	$(LTLWP_CCRULE) $< -DAFS_NONFSTRANS
afs_pioctl.lo: $(TOP_SRC_AFS)/afs_pioctl.c
	$(LTLWP_CCRULE) $< -DAFS_NONFSTRANS
afs_syscall.lo: $(TOP_SRC_AFS)/afs_syscall.c
	$(LTLWP_CCRULE) $< @CFLAGS_NOERROR@ -DAFS_NONFSTRANS
osi_vfsops.lo: $(TOP_SRC_AFS)/UKERNEL/osi_vfsops.c
	$(LTLWP_CCRULE) $< -DAFS_NONFSTRANS
ktc.lo: 	$(TOP_SRCDIR)/auth/ktc.c
	$(LTLWP_CCRULE) $< @CFLAGS_NOERROR@
cellconfig.lo: $(TOP_SRCDIR)/auth/cellconfig.c
	$(LTLWP_CCRULE) $<
keys.lo: $(TOP_SRCDIR)/auth/keys.c
	$(LTLWP_CCRULE) $<
casestrcpy.lo: $(TOP_SRCDIR)/opr/casestrcpy.c
	$(LTLWP_CCRULE) $<
realms.lo: $(TOP_SRCDIR)/auth/realms.c
	$(LTLWP_CCRULE) $<
dirpath.lo: $(TOP_SRCDIR)/util/dirpath.c
	$(LTLWP_CCRULE) $<
fileutil.lo: $(TOP_SRCDIR)/util/fileutil.c
	$(LTLWP_CCRULE) $<
netrestrict.lo: $(TOP_SRCDIR)/auth/netrestrict.c
	$(LTLWP_CCRULE) $<
rxstat.lo: $(TOP_SRC_RXSTAT)/rxstat.c
	$(LTLWP_CCRULE) $<
Krxstat.ss.lo: $(TOP_OBJ_RXSTAT)/Krxstat.ss.c
	$(LTLWP_CCRULE) $<
Krxstat.xdr.lo: $(TOP_OBJ_RXSTAT)/Krxstat.xdr.c
	$(LTLWP_CCRULE) $<
token.xdr.lo: $(TOP_OBJ_AUTH)/token.xdr.c
	$(LTLWP_CCRULE) $<
token.lo: $(TOP_SRCDIR)/auth/token.c
	$(LTLWP_CCRULE) $<
xdr_mem.lo: $(TOP_SRC_RX)/xdr_mem.c
	$(LTLWP_CCRULE) $<
xdr_len.lo: $(TOP_SRC_RX)/xdr_len.c
	$(LTLWP_CCRULE) $<

$(PERLUAFS)/ukernel.pm: $(PERLUAFS)/ukernel_swig_perl.c
$(PERLUAFS)/ukernel_swig_perl.c: ${srcdir}/ukernel_swig.i
	mkdir -p $(PERLUAFS)
	$(SWIG) -perl5 -o $@ ${srcdir}/ukernel_swig.i

$(PERLUAFS)/ukernel_swig_perl.o: $(PERLUAFS)/ukernel_swig_perl.c
	${CC} -c ${CPPFLAGS} ${UAFS_CFLAGS} $(SWIG_PERL_CFLAGS) \
		$(COMMON_INCLUDE) -DUKERNEL $(SHLIB_CFLAGS) -o $@ \
		$(PERLUAFS)/ukernel_swig_perl.c

$(PERLUAFS)/ukernel.so: $(PERLUAFS)/ukernel_swig_perl.o libuafs_pic.la
	${TOP_OBJDIR}/src/config/shlib-build -d $(srcdir) -p -f $@ -- \
		$(SWIG_PERL_LDFLAGS) $(LDFLAGS) \
		$(PERLUAFS)/ukernel_swig_perl.o \
		.libs/libuafs_pic.a ${TOP_LIBDIR}/libcmd_pic.a \
		${TOP_LIBDIR}/libafsutil_pic.a \
		$(TOP_LIBDIR)/libopr_pic.a \
		$(LDFLAGS_roken) $(LDFLAGS_hcrypto) $(LIB_hcrypto) \
		$(LIB_roken) $(LIB_crypt) \
		$(XLIBS)

clean:
	$(LT_CLEAN)
	-$(RM) -rf PERLUAFS afsd afs afsint config rx
	-$(RM) -rf h
	-$(RM) -f linktest $(AFS_OS_CLEAN)

install: libuafs.a libuafs_pic.la @LIBUAFS_BUILD_PERL@
	${INSTALL} -d ${DESTDIR}${libdir}
	${INSTALL_DATA} libuafs.a ${DESTDIR}${libdir}/libuafs.a
	${INSTALL_DATA} libuafs.a ${DESTDIR}${libdir}/libjuafs.a
	${INSTALL_DATA} .libs/libuafs_pic.a ${DESTDIR}${libdir}/libuafs_pic.a
	if [ "x$(LIBUAFS_BUILD_PERL)" != "x" ] ; then \
		${INSTALL} -d ${DESTDIR}${libdir}/perl; \
		${INSTALL} -d ${DESTDIR}${libdir}/perl/AFS; \
		${INSTALL_DATA} PERLUAFS/ukernel.so ${DESTDIR}${libdir}/perl/ukernel.so; \
		${INSTALL_DATA} PERLUAFS/ukernel.pm ${DESTDIR}${libdir}/perl/AFS/ukernel.pm; \
	fi;

dest: $(TOP_INCDIR)/afs/param.h $(TOP_INCDIR)/afs/stds.h \
		$(TOP_INCDIR)/afs/afs_sysnames.h \
		$(TOP_INCDIR)/afs/afs_stats.h \
		$(TOP_SRCDIR)/afs/sysincludes.h \
		$(TOP_SRCDIR)/afs/UKERNEL/afs_usrops.h \
		libuafs.a libuafs_pic.la \
		@LIBUAFS_BUILD_PERL@
	${INSTALL} -d ${DEST}/root.perf/include/afs
	${INSTALL} -d ${DEST}/root.perf/lib
	${INSTALL_DATA} $(TOP_INCDIR)/afs/param.h \
		${DEST}/root.perf/include/afs/param.h
	${INSTALL_DATA} $(TOP_INCDIR)/afs/stds.h \
		${DEST}/root.perf/include/afs/stds.h
	${INSTALL_DATA} $(TOP_INCDIR)/afs/afs_sysnames.h \
		${DEST}/root.perf/include/afs/afs_sysnames.h
	${INSTALL_DATA} $(TOP_INCDIR)/afs/afs_stats.h \
		${DEST}/root.perf/include/afs/afs_stats.h
	${INSTALL_DATA} $(TOP_SRCDIR)/afs/UKERNEL/sysincludes.h \
		${DEST}/root.perf/include/afs/sysincludes.h
	${INSTALL_DATA} $(TOP_SRCDIR)/afs/UKERNEL/afs_usrops.h \
		${DEST}/root.perf/include/afs/afs_usrops.h
	${INSTALL_DATA} libuafs.a ${DEST}/root.perf/lib/libuafs.a
	${INSTALL_DATA} libuafs.a ${DEST}/root.perf/lib/libjuafs.a
	${INSTALL_DATA} .libs/libuafs_pic.a ${DEST}/root.perf/lib/libuafs_pic.a
	if [ "x$(LIBUAFS_BUILD_PERL)" != "x" ] ; then \
		${INSTALL} -d ${DEST}/root.perf/lib/perl; \
		${INSTALL} -d ${DEST}/root.perf/lib/perl/AFS; \
		${INSTALL_DATA} PERLUAFS/ukernel.so ${DEST}/root.perf/lib/perl/ukernel.so; \
		${INSTALL_DATA} PERLUAFS/ukernel.pm ${DEST}/root.perf/lib/perl/AFS/ukernel.pm; \
	fi;

#
# Common directory and other build targets
#

h: $(TOP_SRC_AFS)/*.c $(TOP_SRC_VNOPS)/*.c $(TOP_SRC_RX)/*.c
	-$(RM) -rf h
	@TOP_SRCDIR@/libuafs/make_h_tree $(TOP_SRC_AFS) $(TOP_SRC_VNOPS) \
		$(TOP_SRC_RX)

setup_common: h
	-$(RM) -f afsd
	-ln -s $(TOP_SRCDIR)/afsd afsd

include ${TOP_OBJDIR}/src/config/Makefile.version
